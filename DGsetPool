#!/usr/bin/sh
cd /TopStor/
echo $@ > ~/tmp  
echo $#
web="/var/www/html/des20/Data/DGstatus.log";
logging='/var/www/html/des20/Data/currentinfo2.log'
raid=` echo $@ | awk '{print $1}'`;
userreq=` echo $@ | awk '{print $2}'`;
host=` echo $@ | awk '{print $3}'`;
disk1=` echo $@ | awk '{print $4}'`;
nextpool="1";
msgraid="nothing";
privilege="DISK_Groups"
contrun=`./privthis.sh $privilege $userreq`;
declare -a params=(`echo $@`);
declare -a hostparam=();
declare -a diskparam=();
if [[ $contrun == 'true' ]]
then
msgraid=$raid
if [[ $raid == "readcache" ]]; then msgraid="readcache"; fi;
if [[ $raid == "readwritecache" ]]; then msgraid="readwritecache"; fi;
if [[ $raid == "single" ]]; then msgraid="Single"; fi;
if [[ $raid == "mirror" ]]; then msgraid="Mirror"; fi;
if [[ $raid == "raidz1" ]]; then msgraid="RAID5"; fi;
if [[ $raid == "raidz2" ]]; then msgraid="Enhanced RAID6"; fi;
echo DG1003:$msgraid > $web
datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
logdata='Creating_Pool:Data_with_RAID_'$raid;
logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata code DG1006@@@$msgraid`;
echo DG1006@$datenow@$timenow@$msgraid > ${logging}2
oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
disks=('obsoletecode')
noofdisks=`echo $disks | wc -w | awk '{print $1}'`;
disksarr=(${disks});
if [[ $raid == "Single" ]]; then
 ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${disk1};
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} ${disk1} 2>txt/${0:2}$userreq.txt
fi 
if [[ $raid == "parity3" ]]; then
 diskargs=${#params[@]};
 diskargs=$((diskargs-1));
 echo $diskargs >> ~/tmp
 i=2
 disk1=" "
 while [ $i -lt $diskargs ]; do
   i=$((i+1));
   ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${params[$i]};
   disk1=${disk1}${params[$i]}" "
   echo i=$i, $disk1 >> ~/tmp 
 done;
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz3 ${disk1} 2>txt/${0:2}$userreq.txt
echo ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz3 ${disk1}  >> ~/tmp
fi 
if [[ $raid == "parity2" ]]; then
 diskargs=${#params[@]};
 diskargs=$((diskargs-1));
 echo $diskargs >> ~/tmp
 i=2
 disk1=" "
 while [ $i -lt $diskargs ]; do
   i=$((i+1));
   ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${params[$i]};
   disk1=${disk1}${params[$i]}" "
   echo i=$i, $disk1 >> ~/tmp 
 done;
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz2 ${disk1} 2>txt/${0:2}$userreq.txt
echo ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz2 ${disk1}  >> ~/tmp
fi 
if [[ $raid == "parity" ]]; then
 diskargs=${#params[@]};
 diskargs=$((diskargs-1));
 echo $diskargs >> ~/tmp
 i=2
 disk1=" "
 while [ $i -lt $diskargs ]; do
   i=$((i+1));
   ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${params[$i]};
   disk1=${disk1}${params[$i]}" "
   echo i=$i, $disk1 >> ~/tmp 
 done;
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz1 ${disk1} 2>txt/${0:2}$userreq.txt
echo ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} raidz1 ${disk1}  >> ~/tmp
fi 
if [[ $raid == "stripeset" ]]; then
 diskargs=${#params[@]};
 diskargs=$((diskargs-1));
 echo $diskargs >> ~/tmp
 i=2
 disk1=" "
 while [ $i -lt $diskargs ]; do
   i=$((i+1));
   ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${params[$i]};
   disk1=${disk1}${params[$i]}" "
   echo i=$i, $disk1 >> ~/tmp 
 done;
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} ${disk1} 2>txt/${0:2}$userreq.txt
echo ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} ${disk1}  >> ~/tmp
fi 
if [[ $raid == "mirror" ]]; then
 diskargs=${#params[@]};
 diskargs=$((diskargs-1));
 echo $diskargs >> ~/tmp
 i=2
 disk1=" "
 while [ $i -lt $diskargs ]; do
   i=$((i+1));
   ssh $host  /sbin/zpool labelclear /dev/disk/by-id/${params[$i]};
   disk1=${disk1}${params[$i]}" "
   echo i=$i, $disk1 >> ~/tmp 
 done;
 ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} mirror ${disk1} 2>txt/${0:2}$userreq.txt
echo ssh $host  /sbin/zpool create -o ashift=12 -o autoexpand=on -o autoreplace=on -f p${nextpool} ${disk1}  >> ~/tmp
fi 
if [[ $raid == "mirror2" ]]; then
 poolcr="mirror "
 for ((i = 1; i < $noofdisks; i++));
 do 
  poolcr=${poolcr}" "${disksarr[$i]}" "${disksarr[$((i+1))]}" mirror ";
  i=$((i+1));
 done
 R10=`echo $poolcr | awk '{$NF="";print}'`; 
 R10ar=(${R10});
 zpool create -f Data $R10ar 2>txt/${0:2}$userreq.txt 	
fi
err=`wc -c txt/${0:2}$userreq.txt | awk '{print $1}'`;
datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
if [[ err -ge 3 ]]; then
	echo DG1004:$msgraid > $web;
	cat txt/${0:2}$userreq.txt > ${web}internal;
	logdata='Failed_Creating_Pool:Data_with_RAID_'$raid;
	logthis=`./jsonthis3.sh Date $datenow time $timenow msg error user $userreq data $logdata code DG1007@@@$msgraid`;
echo DG1007@$datenow@$timenow@$msgraid > ${logging}2
	
else
	echo DG1005:Data:$msgraid > $web;
	logdata='Success_Creating_Pool:Data_with_RAID_'$raid;
	logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata code DG1008@@@$msgraid@.`;
echo DG1008@$datenow@$timenow@Data@$msgraid > ${logging}2
fi 
oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
rm txt/${0:2}$userreq.txt
fi
./GetDisklist a
