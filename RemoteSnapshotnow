#! /usr/local/bin/zsh
cd /TopStor
web='/usr/local/www/apache24/data/des19/Data/currentinfo2.log2';
logging='/usr/local/www/apache24/data/des19/Data/currentinfo2.log'
stamp=`date +%s`;
cronout='txt/replicronoutput.log';
#echo System is creating Snapshot $@.... > $web;
oper=$@; 
echo oper=$oper > $cronout
oper1=`echo $oper | awk '{print $1}'`;
oper2=`echo $oper | awk '{print $2}'`;
oper3=`echo $oper | awk '{print $3}'`;
userreq='System';
touch txt/${0:2}${userreq}.txt$stamp
isallowed=`cat partners.txt | grep $oper3 | awk '{print $2}'`;
if [[ $isallowed == "DualWay" ||  $isallowed == "receiver" ]];
then
 hostn=`hostname | awk -F. '{print $1}'`;
 hostip=`ifconfig em1 | grep "inet " | awk '{print $2}'`;
 hostp=`echo $oper2 `;
 echo oper1=$oper1 >> $cronout;
 echo oper2=$oper2 >> $cronout;
 echo stamp=$stamp >> $cronout
 keep=`echo $oper2 | awk -F. '{print $2}'`;
 echo keep=$keep >> $cronout
 currentsnaps=`/sbin/zfs list -t snapshot | grep "$oper1" | grep "$oper2" | awk '{print $1}'`;
 echo currentsnaps=$currentsnaps >> $cronout
 oldsnap=`echo $currentsnaps | sort | head -n 1` ;
 echo oldsnap=$oldsnap >> $cronout
 count=0
 countsnap=`echo  "$currentsnaps" | wc -l `;
 echo countsnap=$countsnap >> $cronout 
 countsnap=$(($countsnap+1));
 echo countsnapplus=$countsnap >> $cronout
 keep=$(($keep+0));
 echo keeppluszero=$keep >> $cronout
 timenow=`date`;
 datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
 counter=$((keep+1));
 snapsc=$((countsnap+0));
 while [[ $counter -le $snapsc ]];  do
 currentsnaps=`/sbin/zfs list -t snapshot | grep "$oper1" | grep "$oper2" | awk '{print $1}'`;
  oldsnap=`echo $currentsnaps | sort | head -n 1` 
  counter=$((counter+1));
#	echo $timenow: have to delete $oldsnap > $web;
  logdata='Deleting_Snapshot:'$oldsnap;
  logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata`;
  oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
  /sbin/zfs destroy $oldsnap 2>txt/${0:2}${userreq}.txt$stamp
  err=`wc -c  txt/${0:2}${userreq}.txt$stamp | awk '{print $1}'`;
  datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
  if [[ $err -ge  4  ]]; then
   cat txt/${0:2}${userreq}.txt$stamp > $web;
   logdata='Difficulty_Deleting_Snapshot:'$oldsnap;
   logthis=`./jsonthis3.sh Date $datenow time $timenow msg warning user $userreq data $logdata`;
  echo $logthis >> $cronout
  counter=$((snapsc+3));
  else
   echo $datenow $timenow: DONE...Replication $@ is created > $web;
   logdata='Success_Deleting_Snapshot:'$oldsnap;
   logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata`;
   echo $logthis >> $cronout
  fi;
  oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
 done 
 newsnap2='Repli.'$hostp'.'$stamp;
 pool=`echo $oper1 | awk -F/ '{print $1}'`;
 vol=`echo $oper1 | awk -F/ '{print $2}'`;
 echo newsnap2=$newsnap2 >> $cronout
 newsnap=`echo $oper1@$newsnap2`;
 echo newsnap=$newsnap >> $cronout
 logdata='Creating_Snapshot:'$newsnap;
 logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata`;
 oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
 /sbin/zfs snapshot $newsnap &> txt/${0:2}$userreq.txt$stamp;
 /sbin/zfs set repli:sender=$hostip $newsnap;
 /sbin/zfs set repli:receiver=$oper3 $newsnap;
 #echo $hostip $oper3 $newsnap2 $pool $vol 
 isproxy=`cat partners.txt | grep $oper3 | awk '{print $3}'`;
 if [[ $isproxy == "true" ]];
 then
##########with proxy##################################################
### ./Asksend 1032_8($8) 10.176.214.6($6) 15737($7) RemoteVolSearch sdk
 # ./ProxysndSVC.sh
  so=`cat proxy.txt | awk '{print $3}'`
  remotetun=`cat txt/receiver | grep "$oper3" | awk '{print $3}'`
  pp=`cat workingpp | awk '{print $1}'` 
  /sbin/zfs set repli:sender=$so $newsnap; 
echo ./ProxyReplicate $oper3 txt/${0:2}${userreq}.txt$stamp $newsnap2 $pool $vol $remotetun $pp $so >> $cronout
./ProxyReplicate $oper3 txt/${0:2}${userreq}.txt$stamp $newsnap2 $pool $vol $remotetun $pp $so

##########noproxy####################################################
 else
  so=`cat proxy.txt | awk '{print $3}'`
  remotetun=$so
  pp=`cat workingpplocal | awk '{print $1}'` 
  /sbin/zfs set repli:sender=$so $newsnap; 
echo ./ProxyReplicate $oper3 txt/${0:2}${userreq}.txt$stamp $newsnap2 $pool $vol $remotetun $pp $so >> $cronout
./ProxyReplicate $oper3 txt/${0:2}${userreq}.txt$stamp $newsnap2 $pool $vol $remotetun $pp $so
  ./Replicate $hostip $oper3 txt/${0:2}$userreq.txt$stamp $newsnap2 $pool $vol  ;
 fi;
 #echo donereplicating
 echo snapshotresult : >> $cronout
 cat txt/${0:2}${userreq}.txt$stamp >> $cronout 
 echo filenameis=txt/${0:2}${userreq}.txt$stamp >> $cronout
 err=`wc -c  txt/${0:2}${userreq}.txt$stamp | awk '{print $1}'`;
 datenow=`date +%m/%d/%Y`; timenow=`date +%T`;
 if [[ $err -ge  4  ]]; then
	fialed=`cat txt/${0:2}${userreq}.txt$stamp`
	echo $failed  > $web;
	logdata='Failed_Replicating'${newsnap}':'$failed;
	logthis=`./jsonthis3.sh Date $datenow time $timenow msg error user $userreq data $logdata`;
	echo $logthis >> $cronout
 else 
	echo $datenow $timenow: DONE...Replication $@ is created > $web; 
	logdata='Success_Replicating_Snapshot:'$newsnap;
	logthis=`./jsonthis3.sh Date $datenow time $timenow msg info user $userreq data $logdata`;
	echo $logthis >> $cronout
 fi;
 oldlog=`cat $logging | sed 's/]//g'`; newlog=$oldlog,$logthis]; echo $newlog > $logging;
fi
echo $datenow $timenow :$logdata > ${logging}2
rm txt/${0:2}${userreq}.txt$stamp 2>/dev/null
